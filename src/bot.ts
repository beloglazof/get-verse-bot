import { Bot, Context, Keyboard, Middleware } from 'grammy';
import { autoRetry } from '@grammyjs/auto-retry';
import { getRandomVerse } from './get-random-verse';
import { Book, Env } from './types';

const { BOT_TOKEN: token = '', ENV: env } = process.env;

export const bot = new Bot(token);

bot.api.config.use(autoRetry());

const randomVerseMessageText = '–õ—é–±–æ–π —Å–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∏—Ö, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üîÆ';
const randomBGVerseMessageText = '–°—Ç–∏—Ö –∏–∑ –ë—Ö–∞–≥–∞–≤–∞–¥-–≥–∏—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ ü™à';
const randomSBVerseMessageText = '–°—Ç–∏—Ö –∏–∑ –®—Ä–∏–º–∞–¥-–ë—Ö–∞–≥–∞–≤–∞—Ç–∞–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ ü¶ú';
const randomCCVerseMessageText =
  '–°—Ç–∏—Ö –∏–∑ –®—Ä–∏ –ß–∞–π—Ç–∞–Ω—å—è-—á–∞—Ä–∏—Ç–∞–º—Ä–∏—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üåï';
const keyboard = new Keyboard()
  .text(randomVerseMessageText)
  .row()
  .text(randomBGVerseMessageText)
  .row()
  .text(randomSBVerseMessageText)
  .row()
  .text(randomCCVerseMessageText)
  .persistent();

const handleGetVerse: (from?: Book) => Middleware<Context> =
  (from) => (ctx) => {
    try {
      const verse = getRandomVerse(from);
      const message = `–í–æ—Ç, —á—Ç–æ —è –Ω–∞—à–µ–ª –¥–ª—è –í–∞—Å:
[${verse.title}](${verse.link})`;

      ctx.reply(message, {
        reply_markup: keyboard,
        parse_mode: 'Markdown',
      });
    } catch (e) {
      console.error(e);
      ctx.reply('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. /help');
    }
  };

bot.command('start', (ctx) => {
  ctx.reply(
    `–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫`,
    {
      reply_markup: keyboard,
    },
  );
});

bot.command('help', (ctx) => {
  ctx.reply('–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∏—Ö', {
    reply_markup: keyboard,
  });
});

bot.hears(randomVerseMessageText, handleGetVerse());
bot.hears(randomBGVerseMessageText, handleGetVerse(Book.BG));
bot.hears(randomSBVerseMessageText, handleGetVerse(Book.SB));
bot.hears(randomCCVerseMessageText, handleGetVerse(Book.CC));

if (env === Env.Dev) {
  bot.start();
}
